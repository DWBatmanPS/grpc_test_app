name: Build and Push Docker Image

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22' # Specify the Node.js version

      - name: Install dependencies
        run: npm install

      - name: Start the application
        run: sudo node src/index.js & echo $! > app.pid &

      - name: Wait for the application to start
        run: sleep 10 # Wait for 10 seconds to ensure the app is running

      - name: Stop the application
        run: |
          kill $(cat app.pid) || true # Kill the application using the saved PID
          rm -f app.pid # Clean up the PID file

      - name: Set lower case org name
        id: org-name
        run: echo "ORG_LC=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
  

      - name: Set Timestamp for use in image tag
        run: echo "IMAGE_TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
    
      - name: Set repo name only
        run: echo "REPO_NAME_LC=$(echo $REPO_NAME | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t ghcr.io/${{ env.ORG_LC }}/${{ env.REPO_NAME_LC }}:${{ env.IMAGE_TAG }}-latest-dev .

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push Docker image
        run: |
          docker push ghcr.io/${{ env.ORG_LC }}/${{ env.REPO_NAME_LC }}:${{ env.IMAGE_TAG }}-latest-dev